name: Base

on:
  push:
    branches:
      - '**'
  pull_request:


env:
  GO_VERSION: '1.23'


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: Allow write access to checks to allow the action to annotate code in the PR.
      checks: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ env.GO_VERSION }}'
          cache: false

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: 'v1.60'


  test:
    name: Test
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ env.GO_VERSION }}'
          cache: false

      - name: Run tests
        run: go test -v -cover ./...


  build:
    name: Build Docker Image
    needs: [test]
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_REPOSITORY: 'ghcr.io/${{ github.repository }}'
      DOCKER_IMAGE_TAG: '${{ github.sha }}'
    outputs:
      docker_image_ref: '${{ steps.postbuild.outputs.docker_image_ref }}'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: '${{ env.DOCKER_IMAGE_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}'

      # - name: Build and push Docker image
      #   uses: docker/bake-action@v4
      #   env:
      #     BUILD_COMMIT: '${{ github.sha }}'
      #     BUILD_DATE: '${{ github.event.head_commit.timestamp }}'
      #   with:
      #     targets: default
      #     push: true
      #     files: |
      #       ./docker-bake.hcl
      #       ${{ steps.metadata.outputs.bake-file }}

      # - id: postbuild
      #   run: echo "docker_image_ref=$DOCKER_IMAGE_REPOSITORY:$DOCKER_IMAGE_TAG" >> "$GITHUB_OUTPUT"


  trivy-fs:
    name: SAST Repository
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode (ALL)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          ignore-unfixed: true

      - name: Run Trivy vulnerability scanner in fs mode (CRITICAL)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          ignore-unfixed: true
          exit-code: '1'
          severity: 'CRITICAL'
